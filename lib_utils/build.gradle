apply from: '../build_default.gradle'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka'

group = 'com.github.FairyHeart'

def cfg = rootProject.ext.android
def libs = rootProject.ext.dependencies

android {

    defaultConfig {
        versionCode cfg.lib_utils_version_code
        versionName cfg.lib_utils_version_name
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
        androidTest.java.srcDirs += 'src/androidTest/java'
        androidTest.resources.srcDirs += 'src/androidTest/res'
    }

    dokka {
        // 输出格式，目前支持五种，html, javadoc,html-as-java, markdown,kotlin-website*
        outputFormat = 'javadoc'
        // 文档输出目录
        outputDirectory = "$rootDir/javadoc"
        //配置方式一
        configuration {
            noJdkLink = true
            noStdlibLink = true
            noAndroidSdkLink = true//
            skipDeprecated = true // 跳过废弃的接口
            reportUndocumented = true // Emit warnings about not documented members.
            skipEmptyPackages = true // 跳过空包
        }
    }
}

dependencies {
    implementation "com.google.code.gson:gson:${libs.gson_version}"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}

